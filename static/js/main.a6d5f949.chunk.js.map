{"version":3,"sources":["components/Button.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Button","symbol","colour","handleClick","onClick","className","style","backgroundColor","Input","text","result","App","buttonColour","useState","setText","setResult","addToText","value","input","join","math","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAUeA,EARA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAChC,OACE,qBAAKC,QAAS,kBAAMD,EAAYF,IAASI,UAAU,mBAAmBC,MAAO,CAACC,gBAAiBL,GAA/F,SACGD,KCUQO,G,MAbD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACrB,OACE,sBAAKL,UAAU,kBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,6BAAKK,MAEP,qBAAKL,UAAU,OAAf,SACE,6BAAKI,WCoDEE,EArDH,WACV,IAAMC,EAAe,UADL,EAEQC,mBAAS,IAFjB,mBAETJ,EAFS,KAEHK,EAFG,OAGYD,mBAAS,IAHrB,mBAGTH,EAHS,KAGDK,EAHC,KAKVC,EAAY,SAACC,GACjBH,GAAQ,SAACL,GAAD,4BAAcA,GAAd,CAAoBQ,EAAQ,UAatC,OACE,qBAAKZ,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACA,cAAC,EAAD,CAAOI,KAAMA,EAAMC,OAAQA,IACzB,sBAAKL,UAAU,MAAf,UACE,cAAC,EAAD,CAAQJ,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIC,OAAQU,EAAcT,YAAaa,OAExD,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQJ,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIC,OAAQU,EAAcT,YAAaa,OAExD,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQJ,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIC,OAAQU,EAAcT,YAAaa,OAExD,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CAAQJ,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIE,YAAaa,IAChC,cAAC,EAAD,CAAQf,OAAO,IAAIE,YAnCN,WACnB,IAAMe,EAAQT,EAAKU,KAAK,IACxBJ,EAAUK,IAAcF,OAkClB,cAAC,EAAD,CAAQjB,OAAO,IAAIC,OAAQU,EAAcT,YAAaa,OAExD,cAAC,EAAD,CAAQf,OAAO,QAAQC,OAAO,UAAUC,YAjC3B,WACjBW,EAAQ,IACRC,EAAU,aCZCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6d5f949.chunk.js","sourcesContent":["import './Button.css';\n\nconst Button = ({ symbol, colour, handleClick }) => {\n  return (\n    <div onClick={() => handleClick(symbol)} className=\"button-container\" style={{backgroundColor: colour}}>\n      {symbol}\n    </div>\n  );\n}\n\nexport default Button;\n","import './Input.css'\n\nconst Input = ({ text, result }) => {\n  return (\n    <div className=\"input-container\">\n      <div className=\"result\">\n        <h1>{result}</h1>\n      </div>\n      <div className=\"text\">\n        <h3>{text}</h3>\n      </div>\n    </div>\n  )\n}\n\nexport default Input;\n","import { useState } from 'react';\n\nimport * as math from 'mathjs';\n\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\n\nconst App = () => {\n  const buttonColour = \"#D3987C\"\n  const [text, setText] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const addToText = (value) => {\n    setText((text) => [...text, value + \" \"]);\n  };\n\n  const calculateSum = () => {\n    const input = text.join(\"\");\n    setResult(math.evaluate(input));\n  };\n\n  const resetInput = () => {\n    setText(\"\");\n    setResult(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator-container\">\n      <Input text={text} result={result}/>\n        <div className=\"row\">\n          <Button symbol=\"7\" handleClick={addToText}/>\n          <Button symbol=\"8\" handleClick={addToText}/>\n          <Button symbol=\"9\" handleClick={addToText}/>\n          <Button symbol=\"/\" colour={buttonColour} handleClick={addToText}/>\n        </div>\n        <div className=\"row\">\n          <Button symbol=\"4\" handleClick={addToText}/>\n          <Button symbol=\"5\" handleClick={addToText}/>\n          <Button symbol=\"6\" handleClick={addToText}/>\n          <Button symbol=\"*\" colour={buttonColour} handleClick={addToText}/>\n        </div>\n        <div className=\"row\">\n          <Button symbol=\"1\" handleClick={addToText}/>\n          <Button symbol=\"2\" handleClick={addToText}/>\n          <Button symbol=\"3\" handleClick={addToText}/>\n          <Button symbol=\"+\" colour={buttonColour} handleClick={addToText}/>\n        </div>\n        <div className=\"row\">\n          <Button symbol=\"0\" handleClick={addToText}/>\n          <Button symbol=\".\" handleClick={addToText}/>\n          <Button symbol=\"=\" handleClick={calculateSum}/>\n          <Button symbol=\"-\" colour={buttonColour} handleClick={addToText}/>\n        </div>\n        <Button symbol=\"Clear\" colour=\"#EE615F\" handleClick={resetInput}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}